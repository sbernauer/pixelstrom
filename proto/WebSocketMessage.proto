syntax = "proto3";

package pixelstrom;

// Root message for WebSocket communication
message WebSocketMessage {
  oneof payload {
    WebSocketClosedBecauseOfLag web_socket_closed_because_of_lag = 1;
    ScreenSync screen_sync = 2;
    UserPainting user_painting = 3;
    CurrentlyPaintingUser currently_painting_user = 4;
    UserStatisticsUpdate user_statistics_update = 5;
  }
}

// The websocket connection lagged behind to much, so it was closed.
// This can happen because of a too slow network connection or imperforate browser.
message WebSocketClosedBecauseOfLag {
    uint64 lag = 1;
}

// Entire contents of the screen
message ScreenSync {
    uint32 width = 1;
    uint32 height = 2;
    // width * height * 4 bytes (rgba)
    bytes pixels = 3;
}

// Partial update of the screen after a user finished painting
message UserPainting {
    // Name of the user that painted the pixels
    string username = 1;

    // List of (2 byte x + 2 byte y + 4 byte (rgba)).
    // Contains multiple entries
    bytes painted = 2;
}

// It's now the turn for a user to paint
message CurrentlyPaintingUser {
    // Name of the currently painting user
    string currentlyPainting = 1;
}

// Get an update on the user statistics.
// This message is also send once a user joins or leaves.
// This makes it easier for the frontend, it can update the users list on every UserStatisticsUpdate
// and the pointer to the currently painting user for every CurrentlyPaintingUser
message UserStatisticsUpdate {
    // List of statistics
    repeated UserStatistics statistics = 1;
}

message UserStatistics {
    // Name of the user the statistics are for
    string username = 1;

    // The number of pixels/s the user is sending
    int32 pixelsPerS = 2;

    // The average response time of the user (Completing drawing is counted as response)
    int32 averageResponseTimeMs = 3;
}
